{"version":3,"file":"fancy-accordion.js","sourceRoot":"","sources":["../../src/fixtures/fancy-accordion.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  LitElement,\n  html,\n  css,\n  customElement,\n  property,\n  PropertyValues\n} from 'lit-element';\nimport { ExpansionPanel } from './expansion-panel.js';\n\n/**\n * A custom element implementing the accordion widget: a vertically stacked set of expandable panels\n * that wraps several instances of the `<expansion-panel>` element. Only one panel can be opened\n * (expanded) at a time.\n *\n * Panel headings function as controls that enable users to open (expand) or hide (collapse) their\n * associated sections of content. The user can toggle panels by mouse click, Enter and Space keys.\n *\n * The component supports keyboard navigation and is aligned with the\n * [WAI-ARIA Authoring Practices](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion).\n *\n * @element fancy-accordion\n *\n * @slot - Slot fot panel elements.\n *\n * @fires opened-index-changed - Event fired when changing currently opened panel.\n */\n@customElement('fancy-accordion')\nexport class FancyAccordion extends LitElement {\n  /**\n   * Index of the currently opened panel. By default all the panels are closed.\n   * Only one panel can be opened at the same time. Setting `null` or `undefined`\n   * closes all the accordion panels.\n   */\n  @property({ type: Number, attribute: 'opened-index' })\n  openedIndex: number | null | undefined = null;\n\n  protected _items: ExpansionPanel[] = [];\n\n  private _boundOnOpened = this._onOpened.bind(this) as EventListener;\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      ::slotted([opened]:not(:first-child)) {\n        margin-top: 16px;\n      }\n\n      ::slotted([opened]:not(:last-child)) {\n        margin-bottom: 16px;\n      }\n\n      ::slotted(:not([opened])) {\n        position: relative;\n      }\n\n      ::slotted(:not([opened]))::after {\n        content: '';\n        position: absolute;\n        bottom: -1px;\n        left: 0;\n        right: 0;\n        height: 1px;\n        opacity: 1;\n        z-index: 1;\n        background-color: rgba(0, 0, 0, 0.12);\n      }\n    `;\n  }\n\n  protected render() {\n    return html`\n      <slot></slot>\n    `;\n  }\n\n  protected firstUpdated() {\n    this.addEventListener('keydown', e => this._onKeydown(e));\n\n    Array.from(this.children).forEach(node => {\n      if (node instanceof ExpansionPanel) {\n        this._items.push(node);\n        node.addEventListener('opened-changed', this._boundOnOpened);\n      }\n    });\n  }\n\n  protected update(props: PropertyValues) {\n    if (props.has('openedIndex') && this._items) {\n      const item =\n        this.openedIndex == null ? null : this._items[this.openedIndex];\n      this._items.forEach(el => {\n        el.opened = el === item;\n      });\n    }\n\n    super.update(props);\n  }\n\n  get focused(): Element | null {\n    const root = this.getRootNode();\n    return ((root as unknown) as DocumentOrShadowRoot).activeElement;\n  }\n\n  private _onKeydown(event: KeyboardEvent) {\n    const target = event.composedPath()[0] as Element;\n    if (target.getAttribute('part') !== 'header') {\n      return;\n    }\n    const key = event.key.replace(/^Arrow/, '');\n    const currentIdx = this._items.indexOf(this.focused as ExpansionPanel);\n    let idx;\n    let increment;\n    switch (key) {\n      case 'Up':\n        increment = -1;\n        idx = currentIdx - 1;\n        break;\n      case 'Down':\n        increment = 1;\n        idx = currentIdx + 1;\n        break;\n      case 'Home':\n        increment = 1;\n        idx = 0;\n        break;\n      case 'End':\n        increment = -1;\n        idx = this._items.length - 1;\n        break;\n      default:\n    }\n    idx = this._getAvailableIndex(idx, increment);\n    if (idx >= 0) {\n      this._items[idx].focus();\n      this._items[idx].setAttribute('focus-ring', '');\n      event.preventDefault();\n    }\n  }\n\n  private _getAvailableIndex(index?: number, increment?: number) {\n    const total = this._items.length;\n    let idx = index;\n    for (\n      let i = 0;\n      typeof idx === 'number' && i < total;\n      i++, idx += increment || 1\n    ) {\n      if (idx < 0) {\n        idx = total - 1;\n      } else if (idx >= total) {\n        idx = 0;\n      }\n      const item = this._items[idx];\n      if (!item.disabled) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  private _onOpened(e: CustomEvent) {\n    const target = e.composedPath()[0] as ExpansionPanel;\n    const idx = this._items.indexOf(target);\n    if (e.detail.value) {\n      if (target.disabled || idx === -1) {\n        return;\n      }\n\n      this.openedIndex = idx;\n      this._notifyOpen();\n\n      this._items.forEach(item => {\n        if (item !== target && item.opened) {\n          item.opened = false;\n        }\n      });\n    } else if (!this._items.some(item => item.opened)) {\n      this.openedIndex = undefined;\n      this._notifyOpen();\n    }\n  }\n\n  private _notifyOpen() {\n    this.dispatchEvent(\n      new CustomEvent('opened-index-changed', {\n        detail: {\n          value: this.openedIndex\n        }\n      })\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'fancy-accordion': FancyAccordion;\n  }\n}\n"]}